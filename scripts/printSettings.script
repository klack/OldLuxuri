///////////////////////////////////////////////////////////////////////////////
/// @fn controller,1
///
/// @brief Program loop
/// @brief state.txts: null, ready
///////////////////////////////////////////////////////////////////////////////
if(printer.printState.txt=="null")
{
  commands.command.txt="M220\r" 
  commands.command.txt="M221\r"
  click sendCommand,1
  printer.printState.txt="ready"
}
if(printer.printState.txt=="stopping")
{
  tsw 255,0
  if(ok==1)
  {
    printer.printState.txt="null"
    page main
  }
}


///////////////////////////////////////////////////////////////////////////////
/// @fn updateView,1
///
/// @brief Updates states for controls
///////////////////////////////////////////////////////////////////////////////
if(printer.printState.txt=="stopping") //Stopping
{
  bStop.picc=bStop.picc2
}
if(printer.printState.txt=="pausing")
{
  setlayer bClose,0
  bClose.aph=0
}
if(printer.printState.txt=="paused") //Paused
{
  bPlayPause.picc=bPlayPause.picc2+2
  tPlayPause.txt="Resume"
  setlayer bClose,0
  bClose.aph=0
}
tBusy.txt=""
if(busy==1) //Busy Text
{
  tBusy.txt="Busy"
}
if(QueueBlocks>0)
{
  tBusy.txt="Commands Queued"
}
if(printer.speed.val!=100&&printer.speed.val!=0) //Speed
{
  covx printer.speed.val,bSpeed.txt,0,0
  bSpeed.picc=bSpeed.picc2+2
  bSpeed.pco2=BLACK
}else
{
  bSpeed.txt=""
  bSpeed.picc=bSpeed.picc2+1
  bSpeed.pco2=WHITE
}
if(printer.flow.val!=100&&printer.flow.val!=0) //Flow
{
  covx printer.flow.val,bFlow.txt,0,0
  bFlow.picc=bFlow.picc2+2
}else
{
  bFlow.txt=""
  bFlow.picc=bFlow.picc2+1
}
if(printer.printState.txt=="printing") //Printing
{
  bPlayPause.picc=bPlayPause.picc2+1
  tPlayPause.txt="Pause"
  setlayer bClose,255
  bClose.aph=127
}
if(state.txt=="pausing")
{
  tPlayPause.txt="Pausing..."
}

///////////////////////////////////////////////////////////////////////////////
/// @fn Pre-initialize
/// @brief Page Initialization
///////////////////////////////////////////////////////////////////////////////
click updateView,1
ReturnPage=dp
DiagReturnPage=dp
if(HandleCallback==1)
{
  if(ReturnObj==0) //Direct to custom controller callback
  {
    click controller,0
  }else
  {
    click b[ReturnObj],0
  }
  ReturnVal=-1
  HandleCallback=0
}
click controller,1


///////////////////////////////////////////////////////////////////////////////
//bSpeed click
ReturnObj=2
numpad.tCaption.txt="Print Speed"
covx printer.speed.val,vars.returnVal.txt,0,0
page numpad
//bSpeed callback
covx printer.speed.val,vars.s.txt,0,0
if(vars.returnVal.txt!=vars.s.txt)
{
  commands.command.txt="M220 S"
  commands.command.txt+=vars.returnVal.txt
  commands.command.txt+="\rM220\r"
  click sendCommand,1
}

//bFlow click
ReturnObj=3
numpad.tCaption.txt="Print Flow"
covx printer.flow.val,vars.returnVal.txt,0,0
page numpad
//bFlow callback
covx printer.flow.val,vars.s.txt,0,0
if(vars.returnVal.txt!=vars.s.txt)
{
  commands.command.txt="M221 S"
  commands.command.txt+=vars.returnVal.txt
  commands.command.txt+="\rM221\r"
  click sendCommand,1
}

//bPlayPause click
if(printer.printState.txt=="printing"||printer.printState.txt=="heating")
{
  state.txt="pausing"
  click updateView,1
  commands.queue.txt+="M25\r" //Pause print
  commands.queue.txt+="M400"
  commands.queue.txt+="G91\r" //Move out the way
  commands.queue.txt+="G0 X-5 Y-5 Z10\r"
  commands.queue.txt+="G90\r"
  commands.queue.txt+="M114\r"
  click sendCommand,0
  while(ok==0)
  {
    click readBuffer,1
  }
  state.txt="null"
  printer.printState.txt="paused"
}else
{
  commands.queue.txt+="G91\r" //Move back
  commands.queue.txt+="G0 X5 Y5 Z-10\r"
  commands.queue.txt+="G90\r"
  commands.queue.txt+="M24\r" //Resume print
  printer.printState.txt="printing"
}
click updateView,1

//Stop click
diagPrompt.tMessage.txt="Stop Print?"
ReturnVal=1
ReturnObj=4
page diagPrompt
//Stop callback
if(ReturnVal!=-1)
{ 
  printer.printState.txt="stopping"
  click updateView,1
  ok=0
  while(ok==0)
  {
    commands.command.txt="M108"
    click sendCommand,1
    commands.command.txt="M524"
    click sendCommand,1
    delay=500
    click readBuffer,1
  }
  commands.command.txt=commands.stopPrint.txt
  click sendCommand,1
  printer.flow.val=100   //Clear printer related printer vars
  printer.speed.val=100
  page main
}

///////////////////////////////////////////////////////////////////////////////
/// @fn animate
///////////////////////////////////////////////////////////////////////////////
if(tBusy.aph==127) //Flash
{
  tBusy.aph=0
}else
{
  tBusy.aph=127
}


///////////////////////////////////////////////////////////////////////////////
/// @fn run
/// @brief Program Loop on 1000ms timer
///////////////////////////////////////////////////////////////////////////////
click updateView,1
click controller,1
click sendCommand,0


// //Mock Data
// parse.buffer.txt="echo:E1 Flow: 90%"
// click notifyEOL,1
// parse.buffer.txt="FR:90%"
// click notifyEOL,1