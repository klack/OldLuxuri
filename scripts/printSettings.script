///////////////////////////////////////////////////////////////////////////////
/// @fn controller,1
///
/// @brief Program loop
/// @brief state.txts: null, ready
///////////////////////////////////////////////////////////////////////////////
if(printer.printState.txt=="null")
{
  commands.command.txt="M220\rM221\r" //Get flow and speed
  click sendCommand,0
  printer.printState.txt="ready"
  click updateView,1
}

if(printer.state.txt="pausing")
{
  if(x!="?")  //See if new coordinates were recieved
  {
    //Calculate new coords to goto
    //Goto them and pause print
    click luxPauseResume,1
  }
  strlen commands.queue.txt,k //Make sure all commands were sent
  if(k==0)
  {
    printer.printState.txt="paused"
    click updateView,1
  }
}
if(printer.printState.txt="resuming")
{
  //Go back to old coordinates
  click luxPauseResume,0
}

if(printer.printState.txt=="stopping")
{
  strlen commands.queue.txt,k //get the length of the command queue
  if(k==0)
  {
    printer.printState.txt="null"
    page main
  }
}
if(printer.printState.txt="printing")
{

}
if(printer.state.txt="paused")
{

}

/// @fn stopPrint,1


///////////////////////////////////////////////////////////////////////////////
/// @fn updateView,1
///
/// @brief Updates states for controls
///////////////////////////////////////////////////////////////////////////////
if(printer.printState.txt=="stopping") //Stopping
{
  bStop.picc=bStop.picc2
}
if(printer.printState.txt=="pausing") //Pausing
{
  tPlayPause.txt="Finishing Moves..."
  setlayer bClose,0
  bClose.aph=0
}
if(printer.printState.txt=="paused") //Paused
{
  bPlayPause.picc=bPlayPause.picc2+2
  tPlayPause.txt="Resume"
  setlayer bClose,0
  bClose.aph=0
}
if(printer.speed.val!=100&&printer.speed.val!=0) //Speed
{
  covx printer.speed.val,bSpeed.txt,0,0
  bSpeed.picc=bSpeed.picc2+2
  bSpeed.pco2=BLACK
}else
{
  bSpeed.txt=""
  bSpeed.picc=bSpeed.picc2+1
  bSpeed.pco2=WHITE
}
if(printer.flow.val!=100&&printer.flow.val!=0) //Flow
{
  covx printer.flow.val,bFlow.txt,0,0
  bFlow.picc=bFlow.picc2+2
}else
{
  bFlow.txt=""
  bFlow.picc=bFlow.picc2+1
}
if(printer.printState.txt=="printing") //Printing
{
  bPlayPause.picc=bPlayPause.picc2+1
  tPlayPause.txt="Pause"
  setlayer bClose,255
  bClose.aph=127
}
tBusy.txt="" //Busy Text
if(busy==1) 
{
  tBusy.txt="Busy"
}
if(QueueBlocks>0)
{
  tBusy.txt="Commands Queued"
}
doevents

///////////////////////////////////////////////////////////////////////////////
/// @fn Pre-initialize
/// @brief Page Initialization
///////////////////////////////////////////////////////////////////////////////
click updateView,1
ReturnPage=dp
DiagReturnPage=dp
if(HandleCallback==1)
{
  if(ReturnObj==0) //Direct to custom controller callback
  {
    click controller,0
  }else
  {
    click b[ReturnObj],0
  }
  ReturnVal=-1
  HandleCallback=0
}
click controller,1


///////////////////////////////////////////////////////////////////////////////
//bSpeed click
ReturnObj=2
numpad.tCaption.txt="Print Speed"
covx printer.speed.val,vars.returnVal.txt,0,0
page numpad
//bSpeed callback
covx printer.speed.val,vars.s.txt,0,0
if(vars.returnVal.txt!=vars.s.txt)
{
  commands.queue.txt+="M220 S"
  commands.queue.txt+=vars.returnVal.txt
  commands.queue.txt+="\rM220\r"
  click sendCommand,0
}

//bFlow click
ReturnObj=3
numpad.tCaption.txt="Print Flow"
covx printer.flow.val,vars.returnVal.txt,0,0
page numpad
//bFlow callback
covx printer.flow.val,vars.s.txt,0,0
if(vars.returnVal.txt!=vars.s.txt)
{
  commands.queue.txt+="M221 S"
  commands.queue.txt+=vars.returnVal.txt
  commands.queue.txt+="\rM221\r"
  click sendCommand,0
}

//bPlayPause click
if(printer.printState.txt=="printing"||printer.printState.txt=="heating")
{
  printer.printState.txt="pausing"
  click updateView,1
  printer.x.txt="?" //Clear out Coords
  printer.y.txt="?"
  printer.z.txt="?"
  commands.queue.txt+="M114\r" //Request new coords
  
}else
{
  printer.printState.txt="resuming"
  click updateView,1  
}
click updateView,1

//Stop click
diagPrompt.tMessage.txt="Stop Print?"
ReturnVal=1
ReturnObj=4
page diagPrompt
//Stop callback
if(ReturnVal!=-1)
{
  printer.printState.txt="stopping"
  tsw 255,0
  click stopPrint,1
  commands.queue.txt="M27 S0 //Turn off SD status\rM104 T0 S0 //Heaters\rM104 T1 S0\rM140 S0\rM106 S0 //Turn off fan\rM220 S100 //Reset Speed\rM221 S100 //Reset Flow\rG0 X Y //Home X Y0\rM605 S1 //Auto Park Mode\rT0"
  click sendCommand,0
}


///////////////////////////////////////////////////////////////////////////////
/// @fn animate
///////////////////////////////////////////////////////////////////////////////
if(tBusy.aph==127) //Flash
{
  tBusy.aph=0
}else
{
  tBusy.aph=127
}
if(printer.printState.txt=="pausing")
{
  if(tPlayPause.aph==127) //Flash
  {
    tPlayPause.aph=0
  }else
  {
    tPlayPause.aph=127
  }  
}else
{
  tPlayPause.aph=127
}


///////////////////////////////////////////////////////////////////////////////
/// @fn run
/// @brief Program Loop on 1000ms timer
///////////////////////////////////////////////////////////////////////////////
click updateView,1
click controller,1
click sendCommand,0


// //Mock Data
// parse.buffer.txt="echo:E1 Flow: 90%"
// click notifyEOL,1
// parse.buffer.txt="FR:90%"
// click notifyEOL,1


parse.buffer.txt="ok"
click notifyEOL,1

busy=1

ok=0