 Bed Topography Report for CSV:
 -0.186 -0.100 -0.075 -0.069 -0.033 -0.029 -0.015 0.019 0.035 0.006 0.025 0.012 0.020 0.002 -0.014
 -0.110 -0.116 -0.071 -0.040 -0.046 -0.010 -0.003 -0.005 -0.003 -0.013 0.000 -0.008 -0.030 -0.040 -0.044
 -0.110 -0.102 -0.058 -0.061 -0.005 -0.013 -0.025 0.016 -0.008 -0.011 -0.016 -0.018 -0.054 -0.065 -0.086
 -0.133 -0.111 -0.095 -0.065 -0.046 -0.030 -0.030 0.002 -0.001 -0.031 -0.038 -0.048 -0.053 -0.095 -0.110
 -0.119 -0.100 -0.070 -0.061 -0.036 -0.013 -0.010 -0.004 -0.024 -0.020 -0.029 -0.070 -0.085 -0.129 -0.155
 -0.153 -0.116 -0.067 -0.051 -0.056 -0.049 -0.015 -0.008 -0.045 -0.029 -0.030 -0.036 -0.051 -0.133 -0.118
 -0.134 -0.124 -0.076 -0.038 -0.038 -0.034 -0.009 -0.001 -0.019 -0.038 -0.035 -0.031 -0.059 -0.114 -0.161
 -0.131 -0.102 -0.099 -0.043 -0.038 -0.066 -0.048 -0.008 -0.041 -0.041 -0.048 -0.075 -0.107 -0.123 -0.116
 -0.097 -0.118 -0.084 -0.043 -0.035 -0.041 -0.014 -0.015 -0.019 -0.066 -0.040 -0.064 -0.066 -0.125 -0.114
 -0.081 -0.089 -0.077 -0.059 -0.020 -0.025 -0.021 -0.006 -0.010 -0.044 -0.019 -0.054 -0.077 -0.134 -0.130
 -0.095 -0.092 -0.069 -0.035 0.014 -0.018 0.011 -0.003 0.010 -0.018 -0.025 0.005 -0.023 -0.054 -0.081
 -0.085 -0.095 -0.060 0.010 0.011 -0.016 0.026 0.023 0.031 0.025 0.048 0.010 -0.001 0.006 -0.029
 -0.076 -0.084 -0.056 -0.011 -0.010 0.043 0.031 0.069 0.055 0.015 0.066 0.063 0.039 0.034 0.041
 -0.107 -0.085 -0.045 -0.049 0.010 0.004 0.025 0.046 0.060 0.050 0.056 0.066 0.063 0.086 0.075
 -0.107 -0.085 -0.034 -0.049 0.030 0.004 0.025 0.046 0.065 0.085 0.056 0.070 0.086 0.139 0.109

// 

14;14;14;14;14;14;14;14;14;14;14;14;14;14
0;1;2;3;4;5;6;7;8;9;10;11;12;13;14

-0186;-0100;-0075;-0069;-0033;-0029;-0015;0019;0035;0006;0025;0012;0020;0002;-0014;-0110;-0116;-0071;-0040;-0046;-0010;-0003;-0005;-0003;-0013;0000;-0008;-0030;-0040;-0044;-0110;-0102;-0058;-0061;-0005;-0013;-0025;0016;-0008;-0011;-0016;-0018;-0054;-0065;-0086;-0133;-0111;-0095;-0065;-0046;-0030;-0030;0002;-0001;-0031;-0038;-0048;-0053;-0095;-0110;-0119;-0100;-0070;-0061;-0036;-0013;-0010;-0004;-0024;-0020;-0029;-0070;-0085;-0129;-0155;-0153;-0116;-0067;-0051;-0056;-0049;-0015;-0008;-0045;-0029;-0030;-0036;-0051;-0133;-0118;-0134;-0124;-0076;-0038;-0038;-0034;-0009;-0001;-0019;-0038;-0035;-0031;-0059;-0114;-0161;-0131;-0102;-0099;-0043;-0038;-0066;-0048;-0008;-0041;-0041;-0048;-0075;-0107;-0123;-0116;-0097;-0118;-0084;-0043;-0035;-0041;-0014;-0015;-0019;-0066;-0040;-0064;-0066;-0125;-0114;-0081;-0089;-0077;-0059;-0020;-0025;-0021;-0006;-0010;-0044;-0019;-0054;-0077;-0134;-0130;-0095;-0092;-0069;-0035;0014;-0018;0011;-0003;0010;-0018;-0025;0005;-0023;-0054;-0081;-0085;-0095;-0060;0010;0011;-0016;0026;0023;0031;0025;0048;0010;-0001;0006;-0029;-0076;-0084;-0056;-0011;-0010;0043;0031;0069;0055;0015;0066;0063;0039;0034;0041;-0107;-0085;-0045;-0049;0010;0004;0025;0046;0060;0050;0056;0066;0063;0086;0075;-0107;-0085;-0034;-0049;0030;0004;0025;0046;0065;0085;0056;0070;0086;0139;0109

// colorize
for(ii=0;ii<50;ii++) //type 3 denotes end of page controls
{
  tt=b[ii].type
  if(tt==54) //number control
  {
    //colorize
    pp=b[ii].val
    spstr arrPoints.txt,vars.s.txt,";",pp // Get the offset value for this point
    covx vars.s.txt,kk,0,0
    if(kk>0)
    {
      kk/=10
      spstr posColors.txt,vars.s.txt,";",kk
      covx vars.s.txt,b[ii].bco,0,0
      b[ii].pco=b[ii].bco
    }else
    {
      kk/=10
      kk*=-1
      spstr negColors.txt,vars.s.txt,";",kk
      covx vars.s.txt,b[ii].bco,0,0
      b[ii].pco=b[ii].bco
    }
  }
}



// convertLine
for(ii=0;ii<15;ii++)
{
    spstr tLine.txt,vars.s.txt," ",ii
    spstr vars.s.txt,vars.s2.txt,".",0
    concat.txt=vars.s2.txt
    spstr vars.s.txt,vars.s2.txt,".",1
    concat.txt+=vars.s2.txt
    arrPoints.txt+=concat.txt
    arrPoints.txt+=";"
}

// touchAction
tDebug.txt="Firing touch action"
if(b[touchAction.val].type==54) // Is a number box
{
  // Get the offset value for this point
  spstr arrPoints.txt,vars.s.txt,";",b[touchAction.val].val
  covx vars.s.txt,offset.val,0,0
  // Get the mesh column and row
  spstr arrMeshRows.txt,vars.s.txt,";",b[touchAction.val].val
  covx vars.s.txt,row.val,0,0
  spstr arrMeshColumns.txt,vars.s.txt,";",b[touchAction.val].val
  covx vars.s.txt,column.val,0,0
}

//parseMesh
if(parsingMesh.val==1)
{
  strlen parse.buffer.txt,l
  if(l>1) //Filter out blank link
  {
    if(rowsRecieved.val<15)
    {
      rawMesh.txt+=parse.buffer.txt
      rawMesh.txt+=vars.tab.txt
      rowsRecieved.val++
    }else
    {
      parsingMesh.val=0
      rowsRecieved.val=0
    }
  }
}
parse.lineMatch.txt="Bed Topography Report for CSV" //Shutdown
strlen parse.lineMatch.txt,j
substr parse.buffer.txt,parse.eval.txt,0,j
if(parse.eval.txt==parse.lineMatch.txt)
{
  parsingMesh.val=1
}
    

//drawBed
arrPoints.txt=""
j=gridPoints.val
j*=gridPoints.val
for(k=0;k<j;k++)
{
  spstr rawMesh.txt,vars.s.txt,vars.tab.txt,k
  spstr vars.s.txt,vars.concat.txt,".",0
  spstr vars.s.txt,vars.s2.txt,".",1
  vars.concat.txt+=vars.s2.txt
  arrPoints.txt+=vars.concat.txt
  arrPoints.txt+=";"
}

//Entry
boxWidth.val=grid.w
boxWidth.val/=gridPoints.val
boxHeight.val=grid.h
boxHeight.val/=gridPoints.val
ii=0
for(row.val=0;row.val<gridPoints.val;row.val++)
{
  for(col.val=0;col.val<gridPoints.val;col.val++)
  {
    click getColor,1
    click drawBox,1
    ii++
  }
}

//drawBox
startX.val=col.val
startX.val*=boxWidth.val
startX.val+=grid.x
startY.val=row.val
startY.val*=boxHeight.val
startY.val+=grid.y
fill startX.val,startY.val,boxWidth.val,boxHeight.val,cc

//getColor
spstr arrPoints.txt,vars.s.txt,";",ii // Get the offset value for this point
covx vars.s.txt,oo,0,0
oo/=10
if(oo>0)
{
  spstr posColors.txt,vars.s.txt,";",oo
}else
{
  oo*=-1
  spstr negColors.txt,vars.s.txt,";",oo
}
covx vars.s.txt,cc,0,0