///////////////////////////////////////////////////////////////////////////////
/// @fn luxController,1
///
/// @brief Program loop
/// @brief state.txts: null, getting-files, ready, no-sd
///////////////////////////////////////////////////////////////////////////////
if(state.txt=="null")
{
  state.txt="init"
  vars.status.txt="Initializing"
  commands.queue.txt+="M155 S0\r" //Temp auto report on
  click luxSend,0
  click luxView,1
}
if(state.txt=="init")
{
  state.txt="getting-files"
  vars.status.txt="Getting Files"
  click luxListFiles,1
  parse.callback.txt="luxController:init"
  click luxSetCallback,1
  click luxView,1
}
if(state.txt=="getting-files")
{
  if(parse.callbackReturn.txt=="luxController:init")
  {
    state.txt="getting-long"
    click luxGetLong,1
    click luxView,1
  }
}
if(state.txt=="getting-long")
{
  if(lFilesReq.val==lFilesRecieved.val)
  {
    state.txt="ready"
    click luxView,1
  }  
}
if(state.txt=="ready")
{
  //Do nothing
}
if(state.txt=="no-sd")
{
  DiagReturnPage=MAIN
  diagConfirm.tMessage.txt="Please insert SD Card"
  page diagConfirm
}


///////////////////////////////////////////////////////////////////////////////
/// @fn luxView,1
///
/// @brief Updates states for controls
///////////////////////////////////////////////////////////////////////////////
tMessage.txt=vars.status.txt
if(state.txt=="null")
{
  tMessage.aph=0
  setlayer bUp,0
  setlayer bDown,0
}
if(state.txt=="init")
{
  tMessage.aph=127
}
if(selectedFile.txt=="") //Hide or Show Print button
{
  tsw bPrint,0
  bPrint.aph=0
}else
{
  tsw bPrint,1
  bPrint.aph=127
}
if(state.txt=="ready")
{
  tMessage.aph=0
  
  strlen valueLFile.txt,j //Load file controls
  if(j>0)
  {
    if(page.val==0) //Button visibility
    {
      setlayer bUp,0
    }else
    {
      setlayer bUp,254
    }
    
    spstr tFiles.txt,vars.s.txt,"\r",page.val+1*5 //Check for last page
    if(vars.s.txt=="")
    {
      setlayer bDown,0
    }else
    {
      setlayer bDown,254
    }

    bUp.picc=bUp.picc2+2
    bDown.picc=bDown.picc2+2
    tsw bUp,1
    tsw bDown,1
    spstr valueLFile.txt,f0.txt,"\r",0
    spstr valueLFile.txt,f1.txt,"\r",1
    spstr valueLFile.txt,f2.txt,"\r",2
    spstr valueLFile.txt,f3.txt,"\r",3
    spstr valueLFile.txt,f4.txt,"\r",4
    for(j=0;j<=36;j++) //Button Group, yellow highlight
    {
      if(b[j].type==116&&b[j].txt_maxl==254) //If filetext box
      {
        if(b[j].txt==selectedFLong.txt)
        {
          b[j].pco=65504
        }else
        {
          b[j].pco=65535
        }
      }
    }
  }
}


///////////////////////////////////////////////////////////////////////////////
/// @fn luxListFiles,1
///
/// @brief Re-initialize SDCard and list files
///////////////////////////////////////////////////////////////////////////////
commands.queue.txt+="M22\r" //Unmount
commands.queue.txt+="M21\r" //Mount
commands.queue.txt+="M20\r" //List files
click luxSend,0

  
///////////////////////////////////////////////////////////////////////////////
/// @fn luxGetLong,1
///
/// @Get Long File names from file list
///////////////////////////////////////////////////////////////////////////////
state.txt="getting-long"
keyLFile.txt=""
valueLFile.txt=""
lFilesReq.val=0
lFilesRecieved.val=0
j=page.val*5
for(k=0;k<=4;k++)
{
  spstr tFiles.txt,vars.s.txt,"\r",j+k
  gettingLFiles.val=1
  if(vars.s.txt!="")
  {
    keyLFile.txt+=vars.s.txt //Store key
    keyLFile.txt+="\r"
    commands.command.txt+="M33 "
    commands.command.txt+=vars.s.txt
    commands.command.txt+="\r"
    lFilesReq.val+=1
  }
}
click luxSend,1

///////////////////////////////////////////////////////////////////////////////
/// @fn parseFiles,1
///
/// @brief Parse filenames and long file names
///////////////////////////////////////////////////////////////////////////////
parse.lineMatch.txt="echo:No media"
if(parse.buffer.txt==parse.lineMatch.txt)
{
  state.txt="no-sd"
}

parse.lineMatch.txt="End file list"
if(parse.buffer.txt==parse.lineMatch.txt)
{
  gettingFiles.val=0 //Getting file state is off, do not listen for filenames
}
if(gettingFiles.val==1) //Get files
{
  spstr parse.buffer.txt,vars.s.txt," ",0
  strlen vars.s.txt,j
  if(j>0)
  {
    substr parse.buffer.txt,vars.s2.txt,0,1
    if(vars.s2.txt!="/") //Skip directories
    {
      tFiles.txt+=vars.s.txt  //Got a file
      tFiles.txt+="\r" //Delimeter
    }
  }
}
parse.lineMatch.txt="Begin file list"
if(parse.buffer.txt==parse.lineMatch.txt)
{
  tFiles.txt="" //Clear existing file list
  gettingFiles.val=1
  page.val=0
}

if(gettingLFiles.val==1)  //Parse long filenames 
{
  parse.lineMatch.txt="/"
  strlen parse.lineMatch.txt,j
  substr parse.buffer.txt,parse.eval.txt,0,j
  if(parse.eval.txt==parse.lineMatch.txt)
  {
    spstr parse.buffer.txt,vars.s.txt,"/",1 //Grab after the slash
    valueLFile.txt+=vars.s.txt
    valueLFile.txt+="\r"
    lFilesRecieved.val+=1
  }
}

if(lFilesRecieved.val>0)
{
  if(lFilesRecieved.val==lFilesReq.val)
  {
    gettingLFiles.val=0
  }
}


///////////////////////////////////////////////////////////////////////////////
//bPrint
print.fileName.txt=selectedFile.txt
printer.sdPrinting.val=0
printer.printState.txt="null"
page print

/// @fn click
/// @brief Executed when clicking on a file name
selectedIndex.val=0
click selectFile,1

//selectFile
spstr keyLFile.txt,vars.s.txt,"\r",selectedIndex.val
selectedFile.txt=vars.s.txt
spstr valueLFile.txt,vars.s.txt,"\r",selectedIndex.val
selectedFLong.txt=vars.s.txt
print.tFileName.txt=selectedFLong.txt
click luxView,1

//On Exit
commands.queue.txt+="M155 S5" //Temp auto report on
click luxSend,0


//bUp
bUp.picc=bUp.picc2
tsw bUp,0
tsw bDown,0
if(page.val>0)
{
  selectedFile.txt=""
  selectedIndex.val=-1
  page.val-=1
  click luxGetLong,1
}
click selectFile,1

//bDown
tsw bUp,0
tsw bDown,0
bDown.picc=bDown.picc2
selectedFile.txt=""
selectedIndex.val=-1
page.val+=1
click luxGetLong,1
click selectFile,1



luxController:init