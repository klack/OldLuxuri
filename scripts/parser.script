///////////////////////////////////////////////////////////////////////////////
/// @fn         parse_1
///
/// @brief      Parse buffer for exact line match
/// @param[in]  parse.search.txt      Text to search for
/// @param[out] parse.matched.val     1 if match, 0 if no match
///////////////////////////////////////////////////////////////////////////////
parse.matched.val=0
parse.eval.txt=parse.buffer.txt
if(parse.search.txt==parse.eval.txt)
{
  parse.matched.val=1
}else
{
  parse.matched.val=0
}

///////////////////////////////////////////////////////////////////////////////
/// @fn         parse_0
///
/// @brief      Parse buffer using a starting and ending position
/// @param[in]  parse.search.txt      Text to search for
/// @param[in]  parse.startPos.val    Starting char postion to search from
/// @param[out] parse.matched.val     1 if match, 0 if no match       
///////////////////////////////////////////////////////////////////////////////
parse.matched.val=0
parse.eval.txt=parse.buffer.txt
strlen parse.search.txt,j
substr parse.eval.txt,parse.result.txt,parse.startPos.val,j
if(parse.result.txt==parse.search.txt)
{
  parse.matched.val=1
}else
{
  parse.matched.val=0
}