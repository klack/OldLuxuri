
///////////////////////////////////////////////////////////////////////////////
/// @fn luxRunOnce
/// @brief Warm up extruders
///////////////////////////////////////////////////////////////////////////////
commands.command.txt="M605 S0\r" //Set manual mode
covx loadTemp.val,vars.s.txt,0,0 //Heat to load temp
commands.command.txt+="M104 T0 S"
commands.command.txt+=vars.s.txt
commands.command.txt+="\r"
commands.command.txt+="M104 T1 S"
commands.command.txt+=vars.s.txt
commands.command.txt+="\r"
click luxSend,1

///////////////////////////////////////////////////////////////////////////////
/// @fn luxInitialize 0
/// @brief Should run on any close button
///////////////////////////////////////////////////////////////////////////////
commands.command.txt="M104 T0 S0\rM104 T1 S0\r"//Unset temperature
commands.command.txt+="M605 S1\r" //Set back to auto mode
click luxSend,1
page ReturnPage

///////////////////////////////////////////////////////////////////////////////
/// @fn luxController
/// @brief Main program loop
///////////////////////////////////////////////////////////////////////////////
if(state.txt=="init")
{
  state.txt="heating"
}
if(state.txt=="heating")
{
  if(printer.T0Temp.val>=loadTemp.val&&printer.T1Temp.val>=loadTemp.val)
  {
    if(printer.)
    state.txt="ready"
    tMessage.txt="Ready"
  }
}

///////////////////////////////////////////////////////////////////////////////
/// @fn luxView
/// @brief Updates states for controls
///////////////////////////////////////////////////////////////////////////////
if(state.txt=="init")
{
  bT0Out.aph=0
  bT0In.aph=0
  bT1Out.aph=0
  bT1In.aph=0
  tsw bT0Out,0 //Disable buttons
  tsw bT0In,0
  tsw bT1Out,0
  tsw bT1In,0
}
if(state.txt=="heating")
{
  pIcon.picc=pState.picc
  tMessage2.aph=127
}
if(state.txt=="ready")
{
  pIcon.picc=pState.picc+1
  tMessage2.aph=0
  tT0Temp.y=222 //Move temps below box
  tT1Temp.y=222
  tsw bT0Out,1 //Enable buttons
  tsw bT0In,1
  tsw bT1Out,1
  tsw bT1In,1
  bT0Out.aph=127
  bT0In.aph=127
  bT1Out.aph=127
  bT1In.aph=127
}
covx printer.T0Temp.val,vars.s.txt,0,0 //Update temperature display
tT0Temp.txt=vars.s.txt
covx printer.T1Temp.val,vars.s.txt,0,0
tT1Temp.txt=vars.s.txt

///////////////////////////////////////////////////////////////////////////////
/// @fn luxPageAnimate
/// @brief Page Animations
///////////////////////////////////////////////////////////////////////////////
if(state.txt=="heating")
{
  if(Frame==0)
  {
    tMessage2.aph=0
  }else
  {
    tMessage2.aph=127
  }
}

///////////////////////////////////////////////////////////////////////////////
//Send Command
commands.command.txt="T"
covx commandTool.val,vars.s.txt,0,0
commands.command.txt+=vars.s.txt
commands.command.txt+="\rG92 E0\r" //Set extruder pos to 0
commands.command.txt+="G1 E"
covx commandLength.val,vars.s2.txt,0,0
commands.command.txt+=vars.s2.txt
commands.command.txt+=" F500\r"
commands.command.txt+="G92 E0\r"
click luxSend,1

//bT0Out
commandTool.val=0
commandLength.val=0-loadLength.val //Change to negative number
click sendCommand,1

//bT0In
commandTool.val=0
commandLength.val=loadLength.val //Change to negative number
click sendCommand,1

//bT1Out
commandTool.val=1
commandLength.val=0-loadLength.val //Change to negative number
click sendCommand,1

//bT1In
commandTool.val=1
commandLength.val=loadLength.val //Change to negative number
click sendCommand,1